{"version":3,"sources":["components/InputQueue/InputQueue.module.scss","components/Queue/Queue.module.scss","containers/QueueContainer.module.scss","components/Result/Result.module.scss","components/InputQueue/InputQueue.js","components/Queue/Queue.js","components/Result/Result.js","containers/QueueContainer.js","utils/helper.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","InputQueue","props","className","classes","Form","FormControl","type","required","value","queue","onChange","queueInputChange","htmlFor","btn","onClick","onSort","Queue","queueComp","map","q","index","Person","style","order","backgroundColor","sorted","Result","resultComp","isChaotic","Object","keys","bribes","b","QueueContainer","useState","stringQueue","setStringQueue","arrayQueue","setArrayQueue","sortedArray","setSortedArray","bribesObj","setBribesObj","tooChaotic","setTooChaotic","cantBribes","setCantBribes","bribesHandler","cant","i","length","j","temp","event","str","replaceAll","convertInputToString","target","arr","split","filter","v","convertStringToArray","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ebf4b9a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"InputQueue_Form__cL_KS\",\"FormControl\":\"InputQueue_FormControl__QRvZ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Queue\":\"Queue_Queue__BfiEj\",\"Person\":\"Queue_Person__3MBT3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QueueContainer\":\"QueueContainer_QueueContainer__2BLhw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Result\":\"Result_Result__2C7pf\"};","import classes from './InputQueue.module.scss';\n\nconst InputQueue = (props) => {\n    return (\n        <form className={classes.Form}>\n            <h1>Queue Rollecoaster</h1>\n            <div className={classes.FormControl}>\n                <input type=\"text\" required value={props.queue} onChange={props.queueInputChange}/>\n                <label htmlFor=\"queue\">Queue</label>\n            </div>\n            <button type=\"button\" className={classes.btn} onClick={props.onSort}>Sort</button>\n        </form>\n    )\n}\n\nexport default InputQueue;","import classes from './Queue.module.scss';\n\nconst Queue = (props) => {\n\n    const queueComp =  props.queue.map((q, index) => {\n        return <div className={classes.Person}  style={{order: index, backgroundColor: props.sorted ? 'lightgreen' : 'white'}} key={'q'+index+q}>{q}</div>;\n    });\n\n    return (\n        <div className={classes.Queue} >{queueComp}</div> \n    )\n}\n\nexport default Queue;","import classes from './Result.module.scss';\n\nconst Result = (props) => {\n\n    let resultComp = null;\n\n    if (props.isChaotic) {\n        resultComp = (<h3 >It is too chaotic.</h3>);\n    } else {\n        resultComp = (<ul>\n            {\n                Object.keys(props.bribes).map((b,index) => {\n                    return <li key={'r'+b+index}>\n                        <p>No.Ticket <strong>{b}</strong>:</p> <span><strong>{props.bribes[b]} brides.</strong></span></li>\n                })\n            }\n        </ul>)\n    }\n    return (\n        <div className={classes.Result}>\n            <h1>Result</h1>\n\n            {resultComp}\n        </div>\n    )\n}\n\nexport default Result;","import classes from './QueueContainer.module.scss';\nimport InputQueue from '../components/InputQueue/InputQueue';\nimport Queue from '../components/Queue/Queue';\nimport { useState } from 'react';\nimport { convertStringToArray, convertInputToString } from '../utils/helper';\nimport Result from '../components/Result/Result';\n\nconst QueueContainer = (props) => {\n\n    const [stringQueue, setStringQueue] = useState('');\n    const [arrayQueue, setArrayQueue] = useState([]);\n    const [sortedArray, setSortedArray] = useState([]);\n    const [bribesObj, setBribesObj] = useState(null);\n    const [tooChaotic, setTooChaotic] = useState(false);\n    const [cantBribes, setCantBribes] = useState(0);\n\n    const queueChangeHandler = (event) => {\n\n        setTooChaotic(false);\n        setBribesObj(null);\n        setSortedArray([])\n\n        let str = convertInputToString(event.target.value);\n        setStringQueue(str);\n\n        let arr = convertStringToArray(str);\n        setArrayQueue(arr);\n    }\n\n    const onSortHandler = () => {\n        bribesHandler([...arrayQueue]);\n    }\n\n    const bribesHandler = (q) =>{\n        let bribes= {};\n        let cant = 0;\n\n        for(let i = 0; i<q.length; i++){\n            for(let j =0; j<q.length-1-i; j++){\n                if(q[j] > q[j+1]){\n                    bribes[q[j]] = bribes[q[j]] != null ? bribes[q[j]]+1 : 1;\n                    if(bribes[q[j]]>2){ setTooChaotic(true);return}\n                    cant ++; // increase cant bribes\n\n                    let temp = q[j+1];\n                    q[j+1] = q[j];\n                    q[j] = temp;\n                }\n            }\n        }\n        setSortedArray(q);\n        setCantBribes(cant);\n        setBribesObj(bribes);\n    }\n\n    return (\n        <div className={classes.QueueContainer} >\n            <InputQueue queue={stringQueue} queueInputChange={queueChangeHandler} onSort={onSortHandler} />\n            {arrayQueue.length > 0 && <Queue queue={arrayQueue} sorted={false}/>}\n\n            {(bribesObj !== null || tooChaotic) && <Result isChaotic={tooChaotic} cant={cantBribes} bribes={bribesObj}/>}\n\n            {sortedArray.length > 0 && <Queue queue={sortedArray} sorted={true}/>}\n        </div >\n    )\n}\n\nexport default QueueContainer;","export const convertInputToString = (str) =>{\n    str = str.replaceAll(/\\s/g,\"\");\n    str = str.replaceAll(/\\d{3}/g,\"\");\n    str = str.replaceAll(/\\s,/g,\",\");\n    str = str.replaceAll(/,,/g,\",\");\n    str = str.replaceAll(/[^0-9],\\s/g,\"\");\n    str = str.replaceAll(/[a-z]/g,\"\");\n\n    return str;\n}\n\nexport const convertStringToArray = (str) =>{\n    return str\n    .split(',')\n    .filter(v=>v !== '')\n    .map(v=>+v);\n}\n","import QueueContainer from './containers/QueueContainer';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <QueueContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}